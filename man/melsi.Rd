% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/melsi_robust.R
\name{melsi}
\alias{melsi}
\title{Run MeLSI Analysis}
\usage{
melsi(
  X,
  y,
  n_perms = 75,
  B = 30,
  m_frac = 0.8,
  show_progress = TRUE
)
}
\arguments{
\item{X}{A matrix of feature abundances with samples as rows and features as columns}

\item{y}{A vector of group labels for each sample}

\item{n_perms}{Number of permutations for p-value calculation (default: 19)}

\item{B}{Number of weak learners in the ensemble (default: 20)}

\item{m_frac}{Fraction of features to use in each weak learner (default: 0.7)}

\item{show_progress}{Whether to display progress information (default: TRUE)}
}
\value{
A list containing:
\item{F_observed}{F-statistic on observed data}
\item{p_value}{Permutation p-value}
\item{M_ensemble}{Learned metric matrix}
\item{null_distribution}{F-statistics from permuted data}
\item{diagnostics}{Method performance metrics including metric difference from identity, condition number, and eigenvalue range}
}
\description{
Runs MeLSI (Metric Learning for Statistical Inference) analysis with permutation testing.
MeLSI learns optimal distance metrics to improve statistical power in detecting group differences
in microbiome data compared to standard distance metrics.
}
\details{
MeLSI uses an ensemble of weak learners to learn an optimal Mahalanobis distance metric
that maximizes the F-statistic from PERMANOVA. The method includes pre-filtering to remove
low-variance features and ensemble learning for robustness.

The learned metric weights indicate feature importance, with higher weights corresponding
to taxa that contribute more to group separation.
}
\examples{
# Generate synthetic microbiome data
test_data <- generate_test_data(n_samples = 60, n_taxa = 100, n_signal_taxa = 10)
X <- test_data$counts
y <- test_data$metadata$Group

# CLR transformation (recommended)
X_clr <- X
X_clr[X_clr == 0] <- 1e-10
X_clr <- log(X_clr)
X_clr <- X_clr - rowMeans(X_clr)

# Run MeLSI analysis
results <- run_melsi_permutation_test(X_clr, y, n_perms = 99, B = 50)

# Display results
cat("F-statistic:", results$F_observed, "\n")
cat("P-value:", results$p_value, "\n")
}
\seealso{
\code{\link{generate_test_data}}, \code{\link{test_improved_melsi}}
}
