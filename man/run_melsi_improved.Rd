% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/melsi_robust.R
\name{run_melsi_improved}
\alias{run_melsi_improved}
\title{Run Improved MeLSI Permutation Test}
\usage{
run_melsi_improved(
  X,
  y,
  n_perms = 75,
  B = 30,
  m_frac = 0.8,
  show_progress = TRUE
)
}
\arguments{
\item{X}{A matrix of feature abundances with samples as rows and features as columns}

\item{y}{A vector of group labels for each sample}

\item{n_perms}{Number of permutations for p-value calculation (default: 75)}

\item{B}{Number of weak learners in the ensemble (default: 30)}

\item{m_frac}{Fraction of features to use in each weak learner (default: 0.8)}

\item{show_progress}{Whether to display progress information (default: TRUE)}
}
\value{
A list containing:
\itemize{
\item F_observed: The observed F-statistic from the learned metric
\item p_value: The permutation-based p-value
\item learned_metric: The learned distance metric matrix
\item null_distribution: F-statistics from permuted data
\item diagnostics: Quality metrics for the analysis
}
}
\description{
Run the improved MeLSI (Metric Learning for Statistical Inference) permutation test
with conservative pre-filtering and optimized parameters for proper Type I error control.
}
\details{
The improved MeLSI algorithm uses:
\itemize{
\item Conservative variance-based pre-filtering (keeps 70% of features)
\item Smaller ensemble size (30 learners) for better generalization
\item Higher feature fraction (80%) for more stable learning
\item Rigorous permutation testing for statistical validity
}
}
\examples{
# Generate synthetic data
set.seed(42)
X <- matrix(rlnorm(60 * 100, meanlog = 2, sdlog = 1), nrow = 60, ncol = 100)
y <- c(rep("Group1", 30), rep("Group2", 30))

# Add signal to first 10 taxa in Group2
X[31:60, 1:10] <- X[31:60, 1:10] * 1.5

# CLR transformation
X_clr <- log(X + 1)
X_clr <- X_clr - rowMeans(X_clr)

# Run improved MeLSI
results <- run_melsi_improved(X_clr, y, n_perms = 75, B = 30, m_frac = 0.8)

# Display results
cat("F-statistic:", results$F_observed, "\n")
cat("P-value:", results$p_value, "\n")
}
